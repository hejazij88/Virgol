@model Virgol.Views.ViewModel.UserViewModel

@{
    ViewBag.Title = "Edit";
}

<h2 class="text-center">Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.RegesterDate)
        @Html.HiddenFor(model => model.Password)



        <div class="d-flex justify-content-center">
        <div class="form-horizontal card ">
            <br />
            <div class="row mb-5">
                <div class="form-group margin-top me-5 col">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group margin-top col me-5">
                    @Html.LabelFor(model => model.RoleId, "RoleId", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-5">
                <div class="form-group me-5 margin-top col">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                    <div class="form-group me-5 margin-top col">
                        @Html.LabelFor(model => model.Family, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Family, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })

                    </div>
                </div>

            <div class="row mb-4">
                <div class="form-group margin-top me-5 col">
                    @if (Model.IsActive == true)
                    {


                        <select name="IsActive">
                            <option class="text-success" selected value="true">Active</option>
                            <option class="text-danger" value="false">UnActive</option>
                        </select>
                    }
                    else
                    {
                        <select name="IsActive">
                            <option class="text-success" value="true">Active</option>
                            <option class="text-danger" selected value="false">UnActive</option>
                        </select>
                    }
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-group card-footer margin-top d-flex justify-content-center">
                <input type="submit" value="Save" class="btn btn-success" /> |
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
        </div>
        }
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
