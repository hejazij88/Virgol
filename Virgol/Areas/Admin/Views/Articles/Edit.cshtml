@model Virgol.Views.ViewModel.ArticleViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Articles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ArticleId)
        @Html.HiddenFor(model => model.ImageName)
        @Html.HiddenFor(model => model.DateRegester)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.Like)
        @Html.HiddenFor(model => model.ComentId)




        <div class="d-flex justify-content-center">
            <div class="form-horizontal card ">
                <br />
                <div class="row mb-4">
                    <div class="form-group margin-top me-4 col">
                        <label class="col-md-2 ">Category</label>
                        @Html.DropDownList("CtegoryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CtegoryId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col me-4">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row mb-4">
                    <div class="form-group me-4 margin-top col">
                        <label class="col-md-2 control-label">Image</label>
                        <img src="~/Images/Article/@Model.ImageName" class="photo200-120 rounded-circle" id="newImagePreview"><br />
                        <input type="file" name="imageUpload" id="imageUpload" onchange="imagePreview(this)" />
                        @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group margin-top me-4 col">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        @if (Model.IsActive == true)
                        {
                            <select name="IsActive">
                                <option value="true" class="text-success" selected>Active</option>
                                <option value="false" class="text-danger">UnActive</option>
                            </select>
                        }
                        else
                        {
                            <select name="IsActive">
                                <option value="true" class="text-success">Active</option>
                                <option selected value="false" class="text-danger">UnActive</option>
                            </select>
                        }
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group margin-top me-4">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>

                
                <div class="form-group card-footer margin-top d-flex justify-content-center">
                    @Html.ActionLink("Back to List", "Index", null, new {@class= "btn btn-primary" })
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>

    </div>
}

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/Site.js"></script>
    <script src="/ckeditor/ckeditor.js"></script>
    <script src="/ckeditor/adapters/jquery.js"></script>
    <script>
        CKEDITOR.replace('Content');
    </script>
